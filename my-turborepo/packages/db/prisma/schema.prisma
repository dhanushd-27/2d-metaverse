// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String  @unique
  avatarId String?
  role     Role
  avatar   Avatar? @relation(fields: [avatarId], references: [id])

  // a user can have multiple spaces
  spaces   Space[]
}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     Int
  height    Int?
  thumbnail String?
  
  // single user can create a space
  creatorId String
  creator   User @relation(fields: [creatorId], references: [id])

  // a space can have multiple space elements
  SpaceElements SpaceElements[]
}

model SpaceElements {
  id        String @id @unique @default(cuid())
  x         Int
  y         Int

  elementId String
  element   Element @relation(fields: [elementId], references: [id])

  spaceId   String
  space     Space @relation(fields: [spaceId], references: [id])
}

model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  imageUrl String

  // an element can be in multiple spaces and multiple maps
  SpaceElements SpaceElements[]
  MapElements   MapElements[]
}

model Map {
  id     String  @id @unique @default(cuid())
  width  Int
  height Int
  name   String

  // A map can have multiple map elements
  mapElements MapElements[]
}

model MapElements {
  id        String  @id @unique @default(cuid())
  x         Int?
  y         Int?

  element   Element @relation(fields: [elementId], references: [id])
  elementId String
  
  // Each element is assigned to a map
  mapId     String
  map       Map @relation(fields: [mapId], references: [id])
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  users    User[]
}

enum Role {
  Admin
  User
}